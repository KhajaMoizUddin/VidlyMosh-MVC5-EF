@model VidlyMain.ViewModel.CustomerFormViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>



@using (Html.BeginForm("Save", "Customers"))
{
    @Html.ValidationSummary(true, "Please fix the following errors") @*To Shoe error message on top*@
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MemberShipTypeId)
        @Html.DropDownListFor(m => m.Customer.MemberShipTypeId, new SelectList(Model.MembershipType, "Id", "Name"), "Select Membership Type", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.MemberShipTypeId)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.BirthDate)
        @Html.TextBoxFor(m => m.Customer.BirthDate, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.BirthDate)
    </div>

    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsLetter) Subscribe To News Letter ?
        </label>
    </div>

    @Html.HiddenFor(m => m.Customer.Id)
    @Html.AntiForgeryToken()  @*To Stop Hackers to access the Customer Saving*@

    <button type="submit" class="btn btn-primary">Save Customer</button>
}


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")   @*To Use ClientSide Validation without posting to server side*@
}
